{"version":3,"sources":["player.js","stack.js","commands.js"],"names":["Player","stack","start","cards","t","this","lastTurnStackSize","history","add","count","number","Array","isArray","push","num","cnt","i","total","has","remove","turn","cb","play","bs","pb","length","player","lie","module","exports","Stack","c","index","splice","order","players","lastTurnIndex","command","input","match","playerName","name","player1","player2","JSON","parse","liar","cardholder","Error"],"mappings":"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","file":"scripts.min.js","sourcesContent":["var Player = function(stack, start) {\n  var cards = start ? start : [];\n  var t = this;\n  var lastTurnStackSize = 0;\n\n  this.history = cards;\n\n  this.add = function(count, number) {\n    if (typeof count === 'object' && !Array.isArray(count)) {\n      for (var i in count) {\n        t.add(count[i], i);\n      }\n    } else {\n      cards.push({'num': number, 'cnt': count});\n    }\n  };\n\n  this.cards = function() {\n    var total = {};\n    for (var i in cards) {\n      if (typeof cards[i] === 'object') {\n        if (!total[cards[i].num]) total[cards[i].num] = 0;\n        total[cards[i].num] += +cards[i].cnt;\n        if (total[cards[i].num] < 0) total[cards[i].num] = 0;\n      }\n    }\n    return total;\n  };\n\n  this.cards.total = function() {\n    var cards = t.cards();\n    var total = 0;\n    for (var i in cards) {\n      total += cards[i];\n    }\n    return total;\n  };\n\n  this.has = function(count, number, total) {\n    total = total ? total : t.cards();\n    if (total[number] >= count || count === 0 && !total[number]) return {\n      'has': true,\n      'total': total[number] || 0\n    };\n    return {\n      'has': false,\n      'total': total[number] || 0\n    };\n  };\n\n  this.remove = function(count, number) {\n    if (typeof count === 'object' && !Array.isArray(count)) {\n      for (var i in count) {\n        t.remove(count[i], i);\n      }\n    } else {\n      t.add(-count, number);\n    }\n  };\n\n  this.turn = function(cb) {\n    cb(t.turn.play, t.turn.bs, t.turn.pb);\n  };\n\n  this.turn.play = function(count, number) {\n    t.remove(count, number);\n    var total = stack.count();\n    stack.add(count, number);\n    lastTurnStackSize = stack.history.length;\n    if (stack.has(0, number, total).total + count > 4) return \"Call BS!\";\n  };\n\n  this.turn.bs = function(player, lie) {\n    if (lie === true) {\n      player.add(stack.bs(true));\n    } else {\n      t.add(stack.bs(false));\n    }\n  };\n\n  this.turn.pb = function() {\n    if (stack.history[lastTurnStackSize] === 'PB') return;\n    stack.pb(lastTurnStackSize || stack.history.length);\n  };\n};\n\nif (typeof module !== 'undefined') module.exports = Player;\n","var Stack = function(start) {\n  var stack = start ? start : [];\n  var t = this;\n\n  this.history = stack;\n\n  this.add = function(count, number) {\n    if (typeof count === 'object' && !Array.isArray(count)) {\n      for (var i in count) {\n        t.add(count[i], i);\n      }\n    } else {\n      stack.push({'num': number, 'cnt': count});\n    }\n  };\n\n  this.bs = function(lie) {\n    var c = t.count();\n    stack.push(lie);\n    return c;\n  };\n\n  this.pb = function(index) {\n    if (index) return stack.splice(index, 0, 'PB');\n    stack.push('PB');\n  };\n\n  this.count = function() {\n    var total = {};\n    for (var i in stack) {\n      if (typeof stack[i] === 'object') {\n        if (!total[stack[i].num]) total[stack[i].num] = 0;\n        total[stack[i].num] += +stack[i].cnt;\n        if (total[stack[i].num] < 0) total[stack[i].num] = 0;\n      } else if (typeof stack[i] === 'string' && stack[i] === 'PB') {\n        total[stack[i-1].num] -= +stack[i-1].cnt;\n      } else if (typeof stack[i] === 'boolean') {\n        total = {};\n      }\n    }\n    return total;\n  };\n\n  this.count.total = function() {\n    var cards = t.count();\n    var total = 0;\n    for (var i in cards) {\n      total += cards[i];\n    }\n    return total;\n  };\n\n  this.has = function(count, number, total) {\n    total = total ? total : t.count();\n    if (total[number] >= count || count === 0 && !total[number]) return {\n      'has': true,\n      'total': total[number] || 0\n    };\n    return {\n      'has': false,\n      'total': total[number] || 0\n    };\n  };\n\n  this.remove = function(count, number) {\n    if (typeof count === 'object' && !Array.isArray(count)) {\n      for (var i in count) {\n        t.remove(count[i], i);\n      }\n    } else {\n      t.add(-count, number);\n    }\n  };\n};\n\nif (typeof module !== 'undefined') module.exports = Stack;\n","var order = [],\n    players = {},\n    turn = 0,\n    lastTurnIndex = 0,\n    stack = new Stack();\n\nvar command = function(input) {\n  if (input.match(/(\\d+), *(\\d+)/g)) {\n    var player = players[order[turn % order.length]];\n    if (!player) return 'Player not found';\n    var playerName = order[turn % order.length];\n    var count = input.match(/(\\d+), *(\\d+)/i)[1];\n    var number = input.match(/(\\d+), *(\\d+)/i)[2];\n    player.turn.play(count, number);\n    turn++;\n    lastTurnIndex = stack.history.length;\n    return 'Player \"' + playerName + '\" played ' + count + ' ' + number + 's';\n  } else if (input.match(/Add *Player *(.\\D\\S*)/i)) {\n    var name = input.match(/Add *Player *(.\\D\\S*)/i)[1];\n    players[name] = new Player(stack);\n    order.push(name);\n    return 'Added Player \"'  + name + '\"';\n  } else if (input.match(/bs, *(\\w*), *(\\w*), *(true|false)/i)) {\n    var player1 = input.match(/bs, *(\\w*), *(\\w*), *(true|false)/i)[1];\n    if (!players[player1]) return 'Player not found';\n    var player2 = input.match(/bs, *(\\w*), *(\\w*), *(true|false)/i)[2];\n    var lie = JSON.parse(input.match(/bs, *(\\w*), *(\\w*), *(true|false)/i)[3]);\n    players[player1].turn.bs(player2, lie);\n    if (lie) {\n      return 'Nice Call!';\n    } else {\n      return 'Better luck next time!';\n    }\n  } else if (input.match(/pb, *(\\w*)/i)) {\n    var liar = input.match(/pb, *(\\w*)/i)[1];\n    if (!players[liar]) return 'Player not found';\n    players[liar].turn.pb();\n    return 'Thanks for telling me!';\n  } else if (input.match(/cards, *(\\w*)/i)) {\n    var cardholder = input.match(/cards, *(\\w*)/i)[1];\n    if (cardholder === 'stack') {\n      return stack.count();\n    } else {\n      if (!players[cardholder]) return 'Player not found';\n      return players[cardholder].cards();\n    }\n  } else {\n    return new Error('Unknown command');\n  }\n};\n"],"sourceRoot":"/source/"}